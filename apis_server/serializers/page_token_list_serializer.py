# coding: utf-8
#
# Copyright (c) 2020-2021 Hopenly srl.
#
# This file is part of Ilyde.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apis_server.serializers.base_model_ import Model
from apis_server import util


class PageTokenListSerializer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token=None, data=None):  # noqa: E501
        """PageTokenListSerializer - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this PageTokenListSerializer.  # noqa: E501
        :type next_page_token: str
        :param data: The data of this PageTokenListSerializer.  # noqa: E501
        :type data: List
        """
        self.openapi_types = {
            'next_page_token': str,
            'data': List
        }

        self.attribute_map = {
            'next_page_token': 'next_page_token',
            'data': 'data'
        }

        self._next_page_token = next_page_token
        self._data = data

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageTokenList of this PageTokenListSerializer.  # noqa: E501
        :rtype: PageTokenListSerializer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this PageTokenListSerializer.


        :return: The next_page_token of this PageTokenListSerializer.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this PageTokenListSerializer.


        :param next_page_token: The next_page_token of this PageTokenListSerializer.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def data(self):
        """Gets the data of this PageTokenListSerializer.


        :return: The data of this PageTokenListSerializer.
        :rtype: List
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this PageTokenListSerializer.


        :param data: The data of this PageTokenListSerializer.
        :type data: List
        """

        self._data = data
