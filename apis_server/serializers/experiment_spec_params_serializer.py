# coding: utf-8
#
# Copyright (c) 2020-2021 Hopenly srl.
#
# This file is part of Ilyde.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apis_server.serializers.base_model_ import Model
from apis_server import util


class ExperimentSpecParamsSerializer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, value=None):  # noqa: E501
        """ExperimentSpecParamsSerializer - a model defined in OpenAPI

        :param name: The name of this ExperimentSpecParamsSerializer.  # noqa: E501
        :type name: str
        :param value: The value of this ExperimentSpecParamsSerializer.  # noqa: E501
        :type value: str
        """
        self.openapi_types = {
            'name': str,
            'value': str
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value'
        }

        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Experiment_spec_params of this ExperimentSpecParamsSerializer.  # noqa: E501
        :rtype: ExperimentSpecParamsSerializer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ExperimentSpecParamsSerializer.


        :return: The name of this ExperimentSpecParamsSerializer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExperimentSpecParamsSerializer.


        :param name: The name of this ExperimentSpecParamsSerializer.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this ExperimentSpecParamsSerializer.


        :return: The value of this ExperimentSpecParamsSerializer.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ExperimentSpecParamsSerializer.


        :param value: The value of this ExperimentSpecParamsSerializer.
        :type value: str
        """

        self._value = value
