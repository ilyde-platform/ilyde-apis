# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from apis_server.serializers.base_model_ import Model
from apis_server import util


class DatasetVersionsListQuerySerializer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, author=None):  # noqa: E501
        """DatasetVersionsListQuerySerializer - a model defined in OpenAPI

        :param id: The id of this DatasetVersionsListQuerySerializer.  # noqa: E501
        :type id: str
        :param name: The name of this DatasetVersionsListQuerySerializer.  # noqa: E501
        :type name: str
        :param author: The author of this DatasetVersionsListQuerySerializer.  # noqa: E501
        :type author: str
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'author': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'author': 'author'
        }

        self._id = id
        self._name = name
        self._author = author

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _dataset_versions_list_query of this DatasetVersionsListQuerySerializer.  # noqa: E501
        :rtype: DatasetVersionsListQuerySerializer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DatasetVersionsListQuerySerializer.


        :return: The id of this DatasetVersionsListQuerySerializer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DatasetVersionsListQuerySerializer.


        :param id: The id of this DatasetVersionsListQuerySerializer.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DatasetVersionsListQuerySerializer.


        :return: The name of this DatasetVersionsListQuerySerializer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DatasetVersionsListQuerySerializer.


        :param name: The name of this DatasetVersionsListQuerySerializer.
        :type name: str
        """

        self._name = name

    @property
    def author(self):
        """Gets the author of this DatasetVersionsListQuerySerializer.


        :return: The author of this DatasetVersionsListQuerySerializer.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this DatasetVersionsListQuerySerializer.


        :param author: The author of this DatasetVersionsListQuerySerializer.
        :type author: str
        """

        self._author = author
